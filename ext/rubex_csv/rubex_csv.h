/* C extension for rubex_csv.
This file in generated by Rubex::Compiler. Do not change!
File generation time: 2018-05-22 19:18:16 +0200.*/

/*Header file for rubex_csv*/

#ifndef RUBEX_CSV_H
#define RUBEX_CSV_H
#include "__rubex__common_utils_.h"
#include <ruby.h>
#include <stdio.h>
#include <stdlib.h>

typedef struct csv_data
{
  FILE* __rubex_ptr_file;
  char* __rubex_ptr_data;
  int* __rubex_ptr_means;
} __rubex_t_Object_csv_data;


typedef struct NativeThreadReader_data_struct
{
  __rubex_t_Object_csv_data* __rubex_ptr_csv_data;
} __rubex_t_NativeThreadReader_NativeThreadReader_data_struct;



VALUE __rubex_rb_cls_NativeThreadReader;
static void* global_no_gil_block_NativeThreadReader_read_and_profit_1__rubex_arg_dummy;
static double global_no_gil_block_NativeThreadReader_read_and_profit_1__rubex_v_pr;
static int global_no_gil_block_NativeThreadReader_read_and_profit_1__rubex_v_line_no;
static int global_no_gil_block_NativeThreadReader_read_and_profit_1__rubex_v_step;
static char* global_no_gil_block_NativeThreadReader_read_and_profit_1__rubex_ptr_d;
static VALUE __rubex_rb_f_NativeThreadReader_initialize (int argc,VALUE* argv,VALUE __rubex_arg_self);
static VALUE __rubex_rb_f_NativeThreadReader_read_and_profit (int argc,VALUE* argv,VALUE __rubex_arg_self);
static double __rubex_c_f_NativeThreadReader__read_and_profit (int __rubex_arg_line,int __rubex_arg_step,char* __rubex_arg_d);
static VALUE __rubex_c_f_NativeThreadReader_allocate (VALUE __rubex_arg_self);
static void __rubex_c_f_NativeThreadReader_deallocate (void* __rubex_arg_raw_data);
static size_t __rubex_c_f_NativeThreadReader_memcount (void* __rubex_arg_raw_data);
static __rubex_t_NativeThreadReader_NativeThreadReader_data_struct* __rubex_c_f_NativeThreadReader_get_struct (VALUE __rubex_arg_obj);
static VALUE __rubex_c_f_no_gil_block_NativeThreadReader_read_and_profit_1 (void* global_no_gil_block_NativeThreadReader_read_and_profit_1__rubex_arg_dummy);
void Init_rubex_csv ();
#endif
